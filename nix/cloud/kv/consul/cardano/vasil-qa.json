{
  "byronGenesisBlob": "eyAiYm9vdFN0YWtlaG9sZGVycyI6CiAgICB7ICI0NDE4MzQxMTdhYjgzYTk3MmUwNjRkOTZkNjA5OWU1ZDBlY2MzNzllOWE0NzEwZTUwNWJlNmY4NCI6IDEKICAgICwgImNkYmJlMjAxYWI4M2QyYjVkYWI0NjYyODkwMDJmNjc1M2YyYjAyNGJmMzIxMzZlMGE0NWFhZTI1IjogMQogICAgLCAiZWExY2I0MTNkYmY0Yjc5MmRkZjdiMTFmNTg0MjIyNGI5NTg0ODBlODgyMDA3NjNjZTFkNGFhZDUiOiAxCiAgICB9CiwgImhlYXZ5RGVsZWdhdGlvbiI6CiAgICB7ICI0NDE4MzQxMTdhYjgzYTk3MmUwNjRkOTZkNjA5OWU1ZDBlY2MzNzllOWE0NzEwZTUwNWJlNmY4NCI6CiAgICAgICAgeyAib21lZ2EiOiAwCiAgICAgICAgLCAiaXNzdWVyUGsiOgogICAgICAgICAgICAiei9BV205Y0RXRThKWExQZktjS3lUbkpkQjQ1WjhUaUhTZit3UUwvY2d5OVZJQVZPRTBVMFlYQWlDb2VYYWtvRkllUkVvUEpCSjlRaUN3VUVTaWtYWWc9PSIKICAgICAgICAsICJkZWxlZ2F0ZVBrIjoKICAgICAgICAgICAgImp0czBad2ZEbExQT1IzSXdwbUZrVWxGakZNSHM3MXJXSnFxNWtjN1FtTlhxQ3lhSWdtNWliOU9yY3lESVRicXVlSFVsUUZLZ252aldZaXFKWWh1Ukx3PT0iCiAgICAgICAgLCAiY2VydCI6CiAgICAgICAgICAgICIyMTAwNmE0NTcwNWNjYTMwZTJjZjk3Yzk4ZDhlMGJkZTE3YzUwZWJmNzlhY2E2MWFhOTAxNGM3NWIwZjQzYzIyNTU0NTNkZWExOWM3OGNkZWI2YTY5YzU1MjMzZDcwODI3ZDZiOWQxZWFiMDFiNmMxODVhNGY2YWQ4MTcwZDQwMCIKICAgICAgICB9CiAgICAsICJjZGJiZTIwMWFiODNkMmI1ZGFiNDY2Mjg5MDAyZjY3NTNmMmIwMjRiZjMyMTM2ZTBhNDVhYWUyNSI6CiAgICAgICAgeyAib21lZ2EiOiAwCiAgICAgICAgLCAiaXNzdWVyUGsiOgogICAgICAgICAgICAicld3M0cwcmUwUXhXaS9PS0t0ajg5NGp5aVlXSytRdTlQc283T3FyMmd1UDdmT1BnVk5PcTlQSWIyL3gzVXJBL29rTm1MZkpYQ09ya3QralBMTy9TNFE9PSIKICAgICAgICAsICJkZWxlZ2F0ZVBrIjoKICAgICAgICAgICAgIlprTENOTGV0eTVoKzFZVDdEMkpPNlBxN0RyOVI5cW1yOTgwa1BPNCtRT3YydUZmS1FkRTdWblU2VDBXWnlaYm9yeUpxbnI1bGM0NjhlYkxYNWpBV3FBPT0iCiAgICAgICAgLCAiY2VydCI6CiAgICAgICAgICAgICIyNzlhMGNlMGU4YTQzZjg1MDAwNDQ5NWI0NzlkNjhmNzI0MjU0NjBjMjEyMzA1MDUwMTg4NmUyMjQzMGExMGQ0MGU0MDI0NzllNTczOTA1N2IzYmNjY2E4YTNlMzBiMDJmMDljZTI1NmUzMDNlNmUwZTQyMzcwNDA1MTkzZTMwOCIKICAgICAgICB9CiAgICAsICJlYTFjYjQxM2RiZjRiNzkyZGRmN2IxMWY1ODQyMjI0Yjk1ODQ4MGU4ODIwMDc2M2NlMWQ0YWFkNSI6CiAgICAgICAgeyAib21lZ2EiOiAwCiAgICAgICAgLCAiaXNzdWVyUGsiOgogICAgICAgICAgICAiZnBJUElXSkVZTTVlaU96eXJkL0VQalZaaHo4cGhERnprcXE3WXh4a1d5REYzYVFLanZ2Um9kbGpwMDJ2akZZU3BzRm92NENycDB1WVM1K3U3Nk9TSlE9PSIKICAgICAgICAsICJkZWxlZ2F0ZVBrIjoKICAgICAgICAgICAgIjg0bGFVQVNSdnpMaWVyTXZLcm1rRm5JUmRSMzdLaFFSSGYrR3locGhrbDFlYXkyRnZxRVpYWEFQQUNTMUhpK0t3Y0tCVHh1MnppS3UzbjBGSU9RaVB3PT0iCiAgICAgICAgLCAiY2VydCI6CiAgICAgICAgICAgICI0ZGZhNmRlNDlhYTI1NmFkMjNmZjAxODhmN2QzYTRkNWZjMTBjOGZkNDE5NjZhNmFlMjllZDQ1Y2I2YWQyYTE1ODY2NWUyNWYwOWNlOWE3MmM3NjVmMjM3ODFmZDUyOGM3NDJiZjI4NGU5OGJkYWNiNDBkMTc4MDcyMzUyOTgwNSIKICAgICAgICB9CiAgICB9CiwgInN0YXJ0VGltZSI6IDE2NTI5MjU2MDAKLCAibm9uQXZ2bUJhbGFuY2VzIjoKICAgIHsgIkZIbnQ0Tkw3eVBZQUhhVjhoTW96MTc1VmFvYzVkWnhyc1BHSDdCNXcyVWtjZXhIS2ZVZnRmd2JCTEJCZjdMcSI6CiAgICAgICAgIjAiCiAgICAsICJGSG50NE5MN3lQWUJIY1oxdmJMa2E4VWNoQlJGV1h4Q1lQdXNYTGdvSEpQSjFSTkdUbWg0dnh2NWpTc29xRzkiOgogICAgICAgICIwIgogICAgLCAiRkhudDROTDd5UFlHMkZqczRzY2szTWFpQTROUW5oTlg2S2k4Wks2SFlaQ2tVZm5VYnNYVUMyOVVFM3ByZzdMIjoKICAgICAgICAiMCIKICAgICwgIkZIbnQ0Tkw3eVBZR1JLMnRQODhVdWYzOXloN3NlYms4amtKeHc1Tml0aE1Rcnd3U040QWFyMkQxcEVZVFBFbiI6CiAgICAgICAgIjMwMDAwMDAwMDAwMDAwMDAwIgogICAgfQosICJibG9ja1ZlcnNpb25EYXRhIjoKICAgIHsgInNjcmlwdFZlcnNpb24iOiAwCiAgICAsICJzbG90RHVyYXRpb24iOiAiMjAwMDAiCiAgICAsICJtYXhCbG9ja1NpemUiOiAiMjAwMDAwMCIKICAgICwgIm1heEhlYWRlclNpemUiOiAiMjAwMDAwMCIKICAgICwgIm1heFR4U2l6ZSI6ICI0MDk2IgogICAgLCAibWF4UHJvcG9zYWxTaXplIjogIjcwMCIKICAgICwgIm1wY1RoZCI6ICIyMDAwMDAwMDAwMDAwMCIKICAgICwgImhlYXZ5RGVsVGhkIjogIjMwMDAwMDAwMDAwMCIKICAgICwgInVwZGF0ZVZvdGVUaGQiOiAiMTAwMDAwMDAwMDAwMCIKICAgICwgInVwZGF0ZVByb3Bvc2FsVGhkIjogIjEwMDAwMDAwMDAwMDAwMCIKICAgICwgInVwZGF0ZUltcGxpY2l0IjogIjEwMDAwIgogICAgLCAic29mdGZvcmtSdWxlIjoKICAgICAgICB7ICJpbml0VGhkIjogIjkwMDAwMDAwMDAwMDAwMCIKICAgICAgICAsICJtaW5UaGQiOiAiNjAwMDAwMDAwMDAwMDAwIgogICAgICAgICwgInRoZERlY3JlbWVudCI6ICI1MDAwMDAwMDAwMDAwMCIKICAgICAgICB9CiAgICAsICJ0eEZlZVBvbGljeSI6CiAgICAgICAgeyAic3VtbWFuZCI6ICIxNTUzODEwMDAwMDAwMDAiICwgIm11bHRpcGxpZXIiOiAiNDM5NDYwMDAwMDAiIH0KICAgICwgInVubG9ja1N0YWtlRXBvY2giOiAiMTg0NDY3NDQwNzM3MDk1NTE2MTUiCiAgICB9CiwgInByb3RvY29sQ29uc3RzIjogeyAiayI6IDM2ICwgInByb3RvY29sTWFnaWMiOiA5IH0KLCAiYXZ2bURpc3RyIjoge30KfQ==",
  "shelleyGenesisBlob": "ewogICAgImFjdGl2ZVNsb3RzQ29lZmYiOiA1LjBlLTIsCiAgICAiZXBvY2hMZW5ndGgiOiA3MjAwLAogICAgImdlbkRlbGVncyI6IHsKICAgICAgICAiNDU4ZjdjZjg3NTFmMzQzMGFmOTZmNTM4ODExZDRlYzQ5MTZjZDY0NDIzMzZlMzMxNmJkNTI3YjUiOiB7CiAgICAgICAgICAgICJkZWxlZ2F0ZSI6ICJiNTg0Y2M4MTc4MzE4ZWZhNzRkMjlmNTVlNWIyZGFkYzgyMWY3ZDE0NjA5ODE4NjhkY2NkMTNjNSIsCiAgICAgICAgICAgICJ2cmYiOiAiMDE4OWM0Y2VjZDUyNTEwMTJjZmJjZTBjZGFiYzQxMzliNGEyZGU5YjZiMjM2NTNiZjRiZmZkNzE5MjUxZjJkNCIKICAgICAgICB9LAogICAgICAgICI5N2Y1M2JkZGIyNzA1OTNlYTYyNjRmMDhlZTM4OWM3ODM4OGNiZWQwY2IyNGVkMTc5YWVlOTk5OCI6IHsKICAgICAgICAgICAgImRlbGVnYXRlIjogImYxZmNhMjBiYjMxNmZjNzAwNGE5NDQxMWUzYTRlODVlOTFkMmVlZTI3MzZlNDJhMDUzOThiZjg1IiwKICAgICAgICAgICAgInZyZiI6ICI4OTI4YWRjN2NkMGJjYTM2OWJjY2E0YThjMjY4N2I4MjFhOWVlOGFhN2MxMWM4NDcyYzY3MjYwNmM0ZmQ0ODRhIgogICAgICAgIH0sCiAgICAgICAgImIwYTNiYmZhYzg2MDEyNzZiN2U3MTc1ZTI4M2RhYzBlODA2OWUwMzVlNDhlYmFhMDYyMmEzNmQ4IjogewogICAgICAgICAgICAiZGVsZWdhdGUiOiAiYjIwYjhiZWQwNzk1NDU0ODY1YTE2MWI1NDA0MDQ5NTcxYTgxMDYyMWQxODFkY2IyODFiOTlhNDYiLAogICAgICAgICAgICAidnJmIjogIjJjZTNjMTJiMGZiZGZjZjc0MzMyMmJlNzU0OWEyZTNkZjliZTMxMTZkM2RmN2U3ZmRhY2I0NzkzZDU2YjVmNjkiCiAgICAgICAgfQogICAgfSwKICAgICJpbml0aWFsRnVuZHMiOiB7fSwKICAgICJtYXhLRVNFdm9sdXRpb25zIjogMTIwLAogICAgIm1heExvdmVsYWNlU3VwcGx5IjogNDUwMDAwMDAwMDAwMDAwMDAsCiAgICAibmV0d29ya0lkIjogIlRlc3RuZXQiLAogICAgIm5ldHdvcmtNYWdpYyI6IDksCiAgICAicHJvdG9jb2xQYXJhbXMiOiB7CiAgICAgICAgImEwIjogMC4xLAogICAgICAgICJkZWNlbnRyYWxpc2F0aW9uUGFyYW0iOiAxLjAsCiAgICAgICAgImVNYXgiOiAxOCwKICAgICAgICAiZXh0cmFFbnRyb3B5IjogewogICAgICAgICAgICAidGFnIjogIk5ldXRyYWxOb25jZSIKICAgICAgICB9LAogICAgICAgICJrZXlEZXBvc2l0IjogNDAwMDAwLAogICAgICAgICJtYXhCbG9ja0JvZHlTaXplIjogNjU1MzYsCiAgICAgICAgIm1heEJsb2NrSGVhZGVyU2l6ZSI6IDExMDAsCiAgICAgICAgIm1heFR4U2l6ZSI6IDE2Mzg0LAogICAgICAgICJtaW5GZWVBIjogNDQsCiAgICAgICAgIm1pbkZlZUIiOiAxNTUzODEsCiAgICAgICAgIm1pblBvb2xDb3N0IjogMCwKICAgICAgICAibWluVVR4T1ZhbHVlIjogMCwKICAgICAgICAibk9wdCI6IDUwLAogICAgICAgICJwb29sRGVwb3NpdCI6IDUwMDAwMDAwMCwKICAgICAgICAicHJvdG9jb2xWZXJzaW9uIjogewogICAgICAgICAgICAibWFqb3IiOiA1LAogICAgICAgICAgICAibWlub3IiOiAwCiAgICAgICAgfSwKICAgICAgICAicmhvIjogMS43ODY1MDA2N2UtMywKICAgICAgICAidGF1IjogMC4xCiAgICB9LAogICAgInNlY3VyaXR5UGFyYW0iOiAzNiwKICAgICJzbG90TGVuZ3RoIjogMSwKICAgICJzbG90c1BlcktFU1BlcmlvZCI6IDg2NDAwLAogICAgInN0YWtpbmciOiB7CiAgICAgICAgInBvb2xzIjoge30sCiAgICAgICAgInN0YWtlIjoge30KICAgIH0sCiAgICAic3lzdGVtU3RhcnQiOiAiMjAyMi0wNS0xOVQwMjowMDowMFoiLAogICAgInVwZGF0ZVF1b3J1bSI6IDMKfQ==",
  "alonzoGenesisBlob": "",
  "nodeConfig": {
    "AlonzoGenesisFile": "alonzo-genesis.json",
    "AlonzoGenesisHash": "fdcb1b56e71318e73aea4042e0ecfdf5ed8bd4ab677d505f5238d47a7672e1ad",
    "ApplicationName": "cardano-sl",
    "ApplicationVersion": 0,
    "ByronGenesisFile": "byron-genesis.json",
    "ByronGenesisHash": "301f1b4b238645a2823c3cb52ff14c6db7e5e54620213f042bc979a0a1b37a73",
    "EnableP2P": true,
    "LastKnownBlockVersion-Alt": 0,
    "LastKnownBlockVersion-Major": 3,
    "LastKnownBlockVersion-Minor": 1,
    "MaxConcurrencyDeadline": 4,
    "MaxKnownMajorProtocolVersion": 2,
    "PBftSignatureThreshold": 1.1,
    "Protocol": "Cardano",
    "RequiresNetworkMagic": "RequiresMagic",
    "ShelleyGenesisFile": "shelley-genesis.json",
    "ShelleyGenesisHash": "1f3e40405ac64df7beb7713b16674b8f70934ce910e00a179fa257b6ac0b2caa",
    "TargetNumberOfActivePeers": 20,
    "TargetNumberOfEstablishedPeers": 50,
    "TargetNumberOfKnownPeers": 100,
    "TargetNumberOfRootPeers": 100,
    "TestAllegraHardForkAtEpoch": 2,
    "TestAlonzoHardForkAtEpoch": 4,
    "TestEnableDevelopmentHardForkEras": true,
    "TestEnableDevelopmentNetworkProtocols": true,
    "TestMaryHardForkAtEpoch": 3,
    "TestShelleyHardForkAtEpoch": 1,
    "TraceAcceptPolicy": true,
    "TraceBlockFetchClient": false,
    "TraceBlockFetchDecisions": false,
    "TraceBlockFetchProtocol": false,
    "TraceBlockFetchProtocolSerialised": false,
    "TraceBlockFetchServer": false,
    "TraceChainDb": true,
    "TraceChainSyncBlockServer": false,
    "TraceChainSyncClient": false,
    "TraceChainSyncHeaderServer": false,
    "TraceChainSyncProtocol": false,
    "TraceConnectionManager": true,
    "TraceDNSResolver": true,
    "TraceDNSSubscription": true,
    "TraceDiffusionInitialization": true,
    "TraceErrorPolicy": true,
    "TraceForge": true,
    "TraceHandshake": false,
    "TraceInboundGovernor": true,
    "TraceIpSubscription": true,
    "TraceLedgerPeers": true,
    "TraceLocalChainSyncProtocol": false,
    "TraceLocalErrorPolicy": true,
    "TraceLocalHandshake": false,
    "TraceLocalRootPeers": true,
    "TraceLocalTxSubmissionProtocol": false,
    "TraceLocalTxSubmissionServer": false,
    "TraceMempool": false,
    "TraceMux": false,
    "TracePeerSelection": true,
    "TracePeerSelectionActions": true,
    "TracePublicRootPeers": true,
    "TraceServer": true,
    "TraceTxInbound": false,
    "TraceTxOutbound": false,
    "TraceTxSubmissionProtocol": false,
    "TracingVerbosity": "NormalVerbosity",
    "TurnOnLogMetrics": true,
    "TurnOnLogging": true,
    "defaultBackends": ["KatipBK"],
    "defaultScribes": [["StdoutSK", "cardano"]],
    "hasEKG": 12788,
    "hasPrometheus": ["0.0.0.0", 12798],
    "minSeverity": "Debug",
    "options": {
      "mapBackends": {
        "cardano.node.metrics": ["EKGViewBK"],
        "cardano.node.resources": ["EKGViewBK"]
      },
      "mapSubtrace": {
        "cardano.node.metrics": {
          "subtrace": "Neutral"
        }
      }
    },
    "rotation": {
      "rpKeepFilesNum": 10,
      "rpLogLimitBytes": 5000000,
      "rpMaxAgeHours": 24
    },
    "setupBackends": ["KatipBK"],
    "setupScribes": [
      {
        "scFormat": "ScJson",
        "scKind": "StdoutSK",
        "scName": "cardano"
      }
    ]
  }
}
